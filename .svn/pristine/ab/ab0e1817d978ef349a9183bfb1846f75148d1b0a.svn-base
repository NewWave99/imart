/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package com.sscs.kdb.entity;

import java.io.Serializable;
import java.util.Date;
import javax.persistence.Basic;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.NamedQueries;
import javax.persistence.NamedQuery;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.validation.constraints.NotNull;
import javax.validation.constraints.Size;

/**
 *
 * @author Administrator
 */
@Entity
@Table(name = "consultexperience")
@NamedQueries({
    @NamedQuery(name = "Consultexperience.findAll", query = "SELECT c FROM Consultexperience c")})
public class Consultexperience implements Serializable {
    private static final long serialVersionUID = 1L;
    @Id
    @Basic(optional = false)
    @NotNull
    @Size(min = 1, max = 25)
    @Column(name = "ConsultExperienceID")
    private String consultExperienceID;
    @Size(max = 255)
    @Column(name = "ProjectName")
    private String projectName;
    @Size(max = 5000)
    @Column(name = "ProjectDescription")
    private String projectDescription;
    @Size(max = 255)
    @Column(name = "Principle")
    private String principle;
    @Column(name = "StartDate")
    @Temporal(TemporalType.DATE)
    private Date startDate;
    @Column(name = "EndDate")
    @Temporal(TemporalType.DATE)
    private Date endDate;
    @Size(max = 5)
    @Column(name = "ManMonth")
    private String manMonth;
    @Size(max = 25)
    @Column(name = "ProjectAmount")
    private String projectAmount;
    @Size(max = 25)
    @Column(name = "ConsultAmount")
    private String consultAmount;
    @Size(max = 25)
    @Column(name = "CreateBy")
    private String createBy;
    @Size(max = 25)
    @Column(name = "ModifyBy")
    private String modifyBy;
    @Column(name = "LastModified")
    @Temporal(TemporalType.TIMESTAMP)
    private Date lastModified;
    @JoinColumn(name = "ProjectPosID", referencedColumnName = "ProjectPosID")
    @ManyToOne
    private Mainprojectpos projectPosID;
    @JoinColumn(name = "ConsultID", referencedColumnName = "ConsultID")
    @ManyToOne
    private Consultant consultID;

    public Consultexperience() {
    }

    public Consultexperience(String consultExperienceID) {
        this.consultExperienceID = consultExperienceID;
    }

    public String getConsultExperienceID() {
        return consultExperienceID;
    }

    public void setConsultExperienceID(String consultExperienceID) {
        this.consultExperienceID = consultExperienceID;
    }

    public String getProjectName() {
        return projectName;
    }

    public void setProjectName(String projectName) {
        this.projectName = projectName;
    }

    public String getProjectDescription() {
        return projectDescription;
    }

    public void setProjectDescription(String projectDescription) {
        this.projectDescription = projectDescription;
    }

    public String getPrinciple() {
        return principle;
    }

    public void setPrinciple(String principle) {
        this.principle = principle;
    }

    public Date getStartDate() {
        return startDate;
    }

    public void setStartDate(Date startDate) {
        this.startDate = startDate;
    }

    public Date getEndDate() {
        return endDate;
    }

    public void setEndDate(Date endDate) {
        this.endDate = endDate;
    }

    public String getManMonth() {
        return manMonth;
    }

    public void setManMonth(String manMonth) {
        this.manMonth = manMonth;
    }

    public String getProjectAmount() {
        return projectAmount;
    }

    public void setProjectAmount(String projectAmount) {
        this.projectAmount = projectAmount;
    }

    public String getConsultAmount() {
        return consultAmount;
    }

    public void setConsultAmount(String consultAmount) {
        this.consultAmount = consultAmount;
    }

    public String getCreateBy() {
        return createBy;
    }

    public void setCreateBy(String createBy) {
        this.createBy = createBy;
    }

    public String getModifyBy() {
        return modifyBy;
    }

    public void setModifyBy(String modifyBy) {
        this.modifyBy = modifyBy;
    }

    public Date getLastModified() {
        return lastModified;
    }

    public void setLastModified(Date lastModified) {
        this.lastModified = lastModified;
    }

    public Mainprojectpos getProjectPosID() {
        return projectPosID;
    }

    public void setProjectPosID(Mainprojectpos projectPosID) {
        this.projectPosID = projectPosID;
    }

    public Consultant getConsultID() {
        return consultID;
    }

    public void setConsultID(Consultant consultID) {
        this.consultID = consultID;
    }

    @Override
    public int hashCode() {
        int hash = 0;
        hash += (consultExperienceID != null ? consultExperienceID.hashCode() : 0);
        return hash;
    }

    @Override
    public boolean equals(Object object) {
        // TODO: Warning - this method won't work in the case the id fields are not set
        if (!(object instanceof Consultexperience)) {
            return false;
        }
        Consultexperience other = (Consultexperience) object;
        if ((this.consultExperienceID == null && other.consultExperienceID != null) || (this.consultExperienceID != null && !this.consultExperienceID.equals(other.consultExperienceID))) {
            return false;
        }
        return true;
    }

    @Override
    public String toString() {
        return "com.sscs.kdb.entity.Consultexperience[ consultExperienceID=" + consultExperienceID + " ]";
    }
    
}
