/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package com.sscs.kdb.entity;

import java.io.Serializable;
import java.util.Date;
import java.util.List;
import javax.persistence.Basic;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.Id;
import javax.persistence.NamedQueries;
import javax.persistence.NamedQuery;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.validation.constraints.NotNull;
import javax.validation.constraints.Size;

/**
 *
 * @author Administrator
 */
@Entity
@Table(name = "maindocumenttype")
@NamedQueries({
    @NamedQuery(name = "Maindocumenttype.findAll", query = "SELECT m FROM Maindocumenttype m")})
public class Maindocumenttype implements Serializable {
    private static final long serialVersionUID = 1L;
    @Id
    @Basic(optional = false)
    @NotNull
    @Size(min = 1, max = 25)
    @Column(name = "DocTypeID")
    private String docTypeID;
    @Size(max = 255)
    @Column(name = "DocTypeTH")
    private String docTypeTH;
    @Size(max = 255)
    @Column(name = "DocTypeEN")
    private String docTypeEN;
    @Size(max = 25)
    @Column(name = "CreateBy")
    private String createBy;
    @Size(max = 25)
    @Column(name = "ModifyBy")
    private String modifyBy;
    @Column(name = "LastModified")
    @Temporal(TemporalType.TIMESTAMP)
    private Date lastModified;
    @OneToMany(mappedBy = "docTypeID")
    private List<Projectdocument> projectdocumentList;
    @OneToMany(mappedBy = "docTypeID")
    private List<Bestpracticeexternalsource> bestpracticeexternalsourceList;

    public Maindocumenttype() {
    }

    public Maindocumenttype(String docTypeID) {
        this.docTypeID = docTypeID;
    }

    public String getDocTypeID() {
        return docTypeID;
    }

    public void setDocTypeID(String docTypeID) {
        this.docTypeID = docTypeID;
    }

    public String getDocTypeTH() {
        return docTypeTH;
    }

    public void setDocTypeTH(String docTypeTH) {
        this.docTypeTH = docTypeTH;
    }

    public String getDocTypeEN() {
        return docTypeEN;
    }

    public void setDocTypeEN(String docTypeEN) {
        this.docTypeEN = docTypeEN;
    }

    public String getCreateBy() {
        return createBy;
    }

    public void setCreateBy(String createBy) {
        this.createBy = createBy;
    }

    public String getModifyBy() {
        return modifyBy;
    }

    public void setModifyBy(String modifyBy) {
        this.modifyBy = modifyBy;
    }

    public Date getLastModified() {
        return lastModified;
    }

    public void setLastModified(Date lastModified) {
        this.lastModified = lastModified;
    }

    public List<Projectdocument> getProjectdocumentList() {
        return projectdocumentList;
    }

    public void setProjectdocumentList(List<Projectdocument> projectdocumentList) {
        this.projectdocumentList = projectdocumentList;
    }

    public List<Bestpracticeexternalsource> getBestpracticeexternalsourceList() {
        return bestpracticeexternalsourceList;
    }

    public void setBestpracticeexternalsourceList(List<Bestpracticeexternalsource> bestpracticeexternalsourceList) {
        this.bestpracticeexternalsourceList = bestpracticeexternalsourceList;
    }

    @Override
    public int hashCode() {
        int hash = 0;
        hash += (docTypeID != null ? docTypeID.hashCode() : 0);
        return hash;
    }

    @Override
    public boolean equals(Object object) {
        // TODO: Warning - this method won't work in the case the id fields are not set
        if (!(object instanceof Maindocumenttype)) {
            return false;
        }
        Maindocumenttype other = (Maindocumenttype) object;
        if ((this.docTypeID == null && other.docTypeID != null) || (this.docTypeID != null && !this.docTypeID.equals(other.docTypeID))) {
            return false;
        }
        return true;
    }

    @Override
    public String toString() {
        return "com.sscs.kdb.entity.Maindocumenttype[ docTypeID=" + docTypeID + " ]";
    }
    
}
