/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package com.sscs.kdb.entity;

import java.io.Serializable;
import java.util.Date;
import javax.persistence.Basic;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.NamedQueries;
import javax.persistence.NamedQuery;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.validation.constraints.NotNull;
import javax.validation.constraints.Size;

/**
 *
 * @author Administrator
 */
@Entity
@Table(name = "consultantaddress")
@NamedQueries({
    @NamedQuery(name = "Consultantaddress.findAll", query = "SELECT c FROM Consultantaddress c")})
public class Consultantaddress implements Serializable {
    private static final long serialVersionUID = 1L;
    @Id
    @Basic(optional = false)
    @NotNull
    @Size(min = 1, max = 25)
    @Column(name = "ConsultantAddressID")
    private String consultantAddressID;
    @Size(max = 255)
    @Column(name = "HouseNo")
    private String houseNo;
    @Size(max = 255)
    @Column(name = "Road")
    private String road;
    @Size(max = 255)
    @Column(name = "Moo")
    private String moo;
    @Size(max = 255)
    @Column(name = "District")
    private String district;
    @Size(max = 255)
    @Column(name = "Amphur")
    private String amphur;
    @Size(max = 255)
    @Column(name = "Province")
    private String province;
    @Size(max = 255)
    @Column(name = "Postcode")
    private String postcode;
    @Size(max = 255)
    @Column(name = "Country")
    private String country;
    @Column(name = "RegisterFlag")
    private Character registerFlag;
    @Column(name = "LiveNowFlag")
    private Character liveNowFlag;
    @Size(max = 25)
    @Column(name = "CreateBy")
    private String createBy;
    @Size(max = 25)
    @Column(name = "ModifyBy")
    private String modifyBy;
    @Column(name = "LastModified")
    @Temporal(TemporalType.TIMESTAMP)
    private Date lastModified;
    @JoinColumn(name = "ConsultID", referencedColumnName = "ConsultID")
    @ManyToOne
    private Consultant consultID;

    public Consultantaddress() {
    }

    public Consultantaddress(String consultantAddressID) {
        this.consultantAddressID = consultantAddressID;
    }

    public String getConsultantAddressID() {
        return consultantAddressID;
    }

    public void setConsultantAddressID(String consultantAddressID) {
        this.consultantAddressID = consultantAddressID;
    }

    public String getHouseNo() {
        return houseNo;
    }

    public void setHouseNo(String houseNo) {
        this.houseNo = houseNo;
    }

    public String getRoad() {
        return road;
    }

    public void setRoad(String road) {
        this.road = road;
    }

    public String getMoo() {
        return moo;
    }

    public void setMoo(String moo) {
        this.moo = moo;
    }

    public String getDistrict() {
        return district;
    }

    public void setDistrict(String district) {
        this.district = district;
    }

    public String getAmphur() {
        return amphur;
    }

    public void setAmphur(String amphur) {
        this.amphur = amphur;
    }

    public String getProvince() {
        return province;
    }

    public void setProvince(String province) {
        this.province = province;
    }

    public String getPostcode() {
        return postcode;
    }

    public void setPostcode(String postcode) {
        this.postcode = postcode;
    }

    public String getCountry() {
        return country;
    }

    public void setCountry(String country) {
        this.country = country;
    }

    public Character getRegisterFlag() {
        return registerFlag;
    }

    public void setRegisterFlag(Character registerFlag) {
        this.registerFlag = registerFlag;
    }

    public Character getLiveNowFlag() {
        return liveNowFlag;
    }

    public void setLiveNowFlag(Character liveNowFlag) {
        this.liveNowFlag = liveNowFlag;
    }

    public String getCreateBy() {
        return createBy;
    }

    public void setCreateBy(String createBy) {
        this.createBy = createBy;
    }

    public String getModifyBy() {
        return modifyBy;
    }

    public void setModifyBy(String modifyBy) {
        this.modifyBy = modifyBy;
    }

    public Date getLastModified() {
        return lastModified;
    }

    public void setLastModified(Date lastModified) {
        this.lastModified = lastModified;
    }

    public Consultant getConsultID() {
        return consultID;
    }

    public void setConsultID(Consultant consultID) {
        this.consultID = consultID;
    }

    @Override
    public int hashCode() {
        int hash = 0;
        hash += (consultantAddressID != null ? consultantAddressID.hashCode() : 0);
        return hash;
    }

    @Override
    public boolean equals(Object object) {
        // TODO: Warning - this method won't work in the case the id fields are not set
        if (!(object instanceof Consultantaddress)) {
            return false;
        }
        Consultantaddress other = (Consultantaddress) object;
        if ((this.consultantAddressID == null && other.consultantAddressID != null) || (this.consultantAddressID != null && !this.consultantAddressID.equals(other.consultantAddressID))) {
            return false;
        }
        return true;
    }

    @Override
    public String toString() {
        return "com.sscs.kdb.entity.Consultantaddress[ consultantAddressID=" + consultantAddressID + " ]";
    }
    
}
