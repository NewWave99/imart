/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package com.sscs.kdb.entity;

import java.io.Serializable;
import java.util.Date;
import java.util.List;
import javax.persistence.Basic;
import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.NamedQueries;
import javax.persistence.NamedQuery;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.validation.constraints.NotNull;
import javax.validation.constraints.Size;

/**
 *
 * @author Administrator
 */
@Entity
@Table(name = "bestpractice")
@NamedQueries({
    @NamedQuery(name = "Bestpractice.findAll", query = "SELECT b FROM Bestpractice b")})
public class Bestpractice implements Serializable {
    private static final long serialVersionUID = 1L;
    @Id
    @Basic(optional = false)
    @NotNull
    @Size(min = 1, max = 25)
    @Column(name = "BestPracticeID")
    private String bestPracticeID;
    @Size(max = 255)
    @Column(name = "BestPracticeTopic")
    private String bestPracticeTopic;
    @Size(max = 5000)
    @Column(name = "BestPracticeDescription")
    private String bestPracticeDescription;
    @Size(max = 25)
    @Column(name = "CreateBy")
    private String createBy;
    @Size(max = 25)
    @Column(name = "ModifyBy")
    private String modifyBy;
    @Column(name = "LastModified")
    @Temporal(TemporalType.TIMESTAMP)
    private Date lastModified;
    @OneToMany(mappedBy = "bestPracticeID")
    private List<Bestpracticesolution> bestpracticesolutionList;
    @JoinColumn(name = "MainBestPraticeGroupID", referencedColumnName = "MainBestPraticeGroupID")
    @ManyToOne
    private Mainbestpraticegroup mainBestPraticeGroupID;
    @OneToMany(mappedBy = "bestPracticeID")
    private List<Bestpracticeexternalsource> bestpracticeexternalsourceList;
    @OneToMany(cascade = CascadeType.ALL, mappedBy = "bestpractice")
    private List<Bestpracticeproject> bestpracticeprojectList;

    public Bestpractice() {
    }

    public Bestpractice(String bestPracticeID) {
        this.bestPracticeID = bestPracticeID;
    }

    public String getBestPracticeID() {
        return bestPracticeID;
    }

    public void setBestPracticeID(String bestPracticeID) {
        this.bestPracticeID = bestPracticeID;
    }

    public String getBestPracticeTopic() {
        return bestPracticeTopic;
    }

    public void setBestPracticeTopic(String bestPracticeTopic) {
        this.bestPracticeTopic = bestPracticeTopic;
    }

    public String getBestPracticeDescription() {
        return bestPracticeDescription;
    }

    public void setBestPracticeDescription(String bestPracticeDescription) {
        this.bestPracticeDescription = bestPracticeDescription;
    }

    public String getCreateBy() {
        return createBy;
    }

    public void setCreateBy(String createBy) {
        this.createBy = createBy;
    }

    public String getModifyBy() {
        return modifyBy;
    }

    public void setModifyBy(String modifyBy) {
        this.modifyBy = modifyBy;
    }

    public Date getLastModified() {
        return lastModified;
    }

    public void setLastModified(Date lastModified) {
        this.lastModified = lastModified;
    }

    public List<Bestpracticesolution> getBestpracticesolutionList() {
        return bestpracticesolutionList;
    }

    public void setBestpracticesolutionList(List<Bestpracticesolution> bestpracticesolutionList) {
        this.bestpracticesolutionList = bestpracticesolutionList;
    }

    public Mainbestpraticegroup getMainBestPraticeGroupID() {
        return mainBestPraticeGroupID;
    }

    public void setMainBestPraticeGroupID(Mainbestpraticegroup mainBestPraticeGroupID) {
        this.mainBestPraticeGroupID = mainBestPraticeGroupID;
    }

    public List<Bestpracticeexternalsource> getBestpracticeexternalsourceList() {
        return bestpracticeexternalsourceList;
    }

    public void setBestpracticeexternalsourceList(List<Bestpracticeexternalsource> bestpracticeexternalsourceList) {
        this.bestpracticeexternalsourceList = bestpracticeexternalsourceList;
    }

    public List<Bestpracticeproject> getBestpracticeprojectList() {
        return bestpracticeprojectList;
    }

    public void setBestpracticeprojectList(List<Bestpracticeproject> bestpracticeprojectList) {
        this.bestpracticeprojectList = bestpracticeprojectList;
    }

    @Override
    public int hashCode() {
        int hash = 0;
        hash += (bestPracticeID != null ? bestPracticeID.hashCode() : 0);
        return hash;
    }

    @Override
    public boolean equals(Object object) {
        // TODO: Warning - this method won't work in the case the id fields are not set
        if (!(object instanceof Bestpractice)) {
            return false;
        }
        Bestpractice other = (Bestpractice) object;
        if ((this.bestPracticeID == null && other.bestPracticeID != null) || (this.bestPracticeID != null && !this.bestPracticeID.equals(other.bestPracticeID))) {
            return false;
        }
        return true;
    }

    @Override
    public String toString() {
        return "com.sscs.kdb.entity.Bestpractice[ bestPracticeID=" + bestPracticeID + " ]";
    }
    
}
